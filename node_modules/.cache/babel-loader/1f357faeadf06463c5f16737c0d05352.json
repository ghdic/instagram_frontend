{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\gitfolder\\\\instagram_clone\\\\frontend\\\\src\\\\components\\\\MainPage\\\\Mainpage.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport './MainPage.css';\nimport Post from \"../Post/Post\";\nimport uploadImage from '../../images/upload.png';\nimport { storage, auth } from \"../firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Mainpage() {\n  _s();\n\n  let [progress, setProgress] = useState(\"\");\n  let [postData, setPostData] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:8080/post\").then(response => response.json()).then(data => {\n      setPostData(data);\n    });\n  }, []); // let data = [\n  //     {\n  //         id:'1234',\n  //         userName:'asd',\n  //         postImage:'https://hatrabbits.com/wp-content/uploads/2017/01/random.jpg',\n  //         likes:'1234',\n  //         commentList: [\n  //             {\n  //                 \"userName\": \"ASDS\",\n  //                 \"commentId\":\"1234\",\n  //                 \"timeStamp\":\"123456\",\n  //                 \"description\":\"Comment 1\"\n  //             },\n  //             {\n  //                 \"userName\": \"ASDS\",\n  //                 \"commentId\":\"1234\",\n  //                 \"timeStamp\":\"123456\",\n  //                 \"description\":\"Comment 1\"\n  //             },\n  //             {\n  //                 \"userName\": \"ASDS\",\n  //                 \"commentId\":\"1234\",\n  //                 \"timeStamp\":\"123456\",\n  //                 \"description\":\"Comment 1\"\n  //             }\n  //         ]\n  //     },\n  //     {\n  //         id:'1234',\n  //         userName:'AAAA',\n  //         postImage:'https://hatrabbits.com/wp-content/uploads/2017/01/random.jpg',\n  //         likes:'1234',\n  //         commentList: [\n  //             {\n  //                 \"userName\": \"DDDD\",\n  //                 \"commentId\":\"1234\",\n  //                 \"timeStamp\":\"123456\",\n  //                 \"description\":\"Comment 1\"\n  //             },\n  //             {\n  //                 \"userName\": \"ASDS\",\n  //                 \"commentId\":\"1234\",\n  //                 \"timeStamp\":\"123456\",\n  //                 \"description\":\"Comment 1\"\n  //             },\n  //             {\n  //                 \"userName\": \"ASDS\",\n  //                 \"commentId\":\"1234\",\n  //                 \"timeStamp\":\"123456\",\n  //                 \"description\":\"Comment 1\"\n  //             }\n  //         ]\n  //     }\n  // ]\n\n  let upload = e => {\n    let image = e.target.files[0];\n    const thisContext = this;\n    if (image == null || image == undefined) return;\n    let uploadTask = storage.ref(\"images\").child(image.name).put(image);\n    uploadTask.on(\"state_change\", function (snapshot) {\n      let progress_percent = snapshot.bytesTransferred / snapshot.totalBytes * 100;\n      setProgress(progress_percent.toString());\n    }, function (error) {}, function () {\n      uploadTask.snapshot.ref.getDownloadURL().then(function (downloadURL) {\n        console.log(downloadURL);\n        let payload = {\n          \"postId\": Math.floor(Math.random() * 100000),\n          \"userId\": JSON.parse(localStorage.getItem(\"user\")).uid,\n          \"postPath\": downloadURL,\n          \"timeStamp\": new Date().getTime(),\n          \"likeCount\": 0\n        };\n        const requestOptions = {\n          method: \"POST\",\n          headers: {\n            'ContentType': \"application/json\"\n          },\n          body: JSON.stringify(payload)\n        };\n        fetch(\"http://localhost:8080/post\", requestOptions).then(response => response.json()).then(data => {\n          thisContext.setState({\n            postArray: data\n          });\n        }).catch(error => {});\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        \"textAlign\": \"center\",\n        \"margin\": \"10px\",\n        width: \"650px\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"fileupload\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          for: \"file-upload\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: uploadImage,\n            className: \"mainpage_uploadicon\",\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"file-upload\",\n          onChange: upload,\n          type: \"file\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload_text\",\n        children: progress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this), postData.map((item, index) => /*#__PURE__*/_jsxDEV(Post, {\n      post: item\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Mainpage, \"9vWDgBqi2ZB2OF9w5Ifgm2QLx2o=\");\n\n_c = Mainpage;\n;\nexport default Mainpage;\n\nvar _c;\n\n$RefreshReg$(_c, \"Mainpage\");","map":{"version":3,"sources":["C:/Users/user/Desktop/gitfolder/instagram_clone/frontend/src/components/MainPage/Mainpage.js"],"names":["React","useState","useEffect","Post","uploadImage","storage","auth","Mainpage","progress","setProgress","postData","setPostData","fetch","then","response","json","data","upload","e","image","target","files","thisContext","undefined","uploadTask","ref","child","name","put","on","snapshot","progress_percent","bytesTransferred","totalBytes","toString","error","getDownloadURL","downloadURL","console","log","payload","Math","floor","random","JSON","parse","localStorage","getItem","uid","Date","getTime","requestOptions","method","headers","body","stringify","setState","postArray","catch","width","map","item","index"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport './MainPage.css'\r\nimport Post from \"../Post/Post\";\r\nimport uploadImage from '../../images/upload.png';\r\nimport {storage, auth} from \"../firebase\";\r\n\r\nfunction Mainpage() {\r\n    let [progress, setProgress] = useState(\"\");\r\n    let [postData, setPostData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch(\"http://localhost:8080/post\")\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setPostData(data);\r\n            })\r\n    }, [])\r\n    // let data = [\r\n    //     {\r\n    //         id:'1234',\r\n    //         userName:'asd',\r\n    //         postImage:'https://hatrabbits.com/wp-content/uploads/2017/01/random.jpg',\r\n    //         likes:'1234',\r\n    //         commentList: [\r\n    //             {\r\n    //                 \"userName\": \"ASDS\",\r\n    //                 \"commentId\":\"1234\",\r\n    //                 \"timeStamp\":\"123456\",\r\n    //                 \"description\":\"Comment 1\"\r\n    //             },\r\n    //             {\r\n    //                 \"userName\": \"ASDS\",\r\n    //                 \"commentId\":\"1234\",\r\n    //                 \"timeStamp\":\"123456\",\r\n    //                 \"description\":\"Comment 1\"\r\n    //             },\r\n    //             {\r\n    //                 \"userName\": \"ASDS\",\r\n    //                 \"commentId\":\"1234\",\r\n    //                 \"timeStamp\":\"123456\",\r\n    //                 \"description\":\"Comment 1\"\r\n    //             }\r\n    //         ]\r\n    //     },\r\n    //     {\r\n    //         id:'1234',\r\n    //         userName:'AAAA',\r\n    //         postImage:'https://hatrabbits.com/wp-content/uploads/2017/01/random.jpg',\r\n    //         likes:'1234',\r\n    //         commentList: [\r\n    //             {\r\n    //                 \"userName\": \"DDDD\",\r\n    //                 \"commentId\":\"1234\",\r\n    //                 \"timeStamp\":\"123456\",\r\n    //                 \"description\":\"Comment 1\"\r\n    //             },\r\n    //             {\r\n    //                 \"userName\": \"ASDS\",\r\n    //                 \"commentId\":\"1234\",\r\n    //                 \"timeStamp\":\"123456\",\r\n    //                 \"description\":\"Comment 1\"\r\n    //             },\r\n    //             {\r\n    //                 \"userName\": \"ASDS\",\r\n    //                 \"commentId\":\"1234\",\r\n    //                 \"timeStamp\":\"123456\",\r\n    //                 \"description\":\"Comment 1\"\r\n    //             }\r\n    //         ]\r\n    //     }\r\n    // ]\r\n\r\n\r\n    let upload = (e) => {\r\n        let image = e.target.files[0];\r\n        const thisContext = this;\r\n        if(image == null || image == undefined)\r\n            return;\r\n        let uploadTask = storage.ref(\"images\").child(image.name).put(image);\r\n        uploadTask.on(\r\n            \"state_change\",\r\n            function (snapshot) {\r\n                let progress_percent = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n                setProgress(progress_percent.toString())\r\n            },\r\n            function (error) {\r\n\r\n            },\r\n            function(){\r\n                uploadTask.snapshot.ref.getDownloadURL().then(function (downloadURL) {\r\n                    console.log(downloadURL)\r\n                    let payload = {\r\n                        \"postId\": Math.floor(Math.random()*100000),\r\n                        \"userId\": JSON.parse(localStorage.getItem(\"user\")).uid,\r\n                        \"postPath\": downloadURL,\r\n                        \"timeStamp\": new Date().getTime(),\r\n                        \"likeCount\": 0\r\n                    }\r\n\r\n                    const requestOptions = {\r\n                        method: \"POST\",\r\n                        headers: {'ContentType': \"application/json\"},\r\n                        body: JSON.stringify(payload)\r\n                    }\r\n                    fetch(\"http://localhost:8080/post\", requestOptions)\r\n                        .then(response => response.json())\r\n                        .then(data => {\r\n                            thisContext.setState({postArray: data})\r\n                        })\r\n                        .catch(error => {\r\n\r\n                        })\r\n                })\r\n            }\r\n        )\r\n    }\r\n  return (\r\n    <div>\r\n        <div style={{\"textAlign\":\"center\", \"margin\":\"10px\", width:\"650px\"}}>\r\n            <div className=\"fileupload\">\r\n                <label for=\"file-upload\">\r\n                    <img src={uploadImage} className=\"mainpage_uploadicon\" alt=\"\"/>\r\n                </label>\r\n                <input id=\"file-upload\" onChange={upload} type=\"file\"/>\r\n            </div>\r\n            <div className=\"upload_text\">{progress}</div>\r\n        </div>\r\n        {\r\n            postData.map((item, index) => (\r\n                <Post post={item} />\r\n            ))\r\n        }\r\n\r\n\r\n\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Mainpage;"]},"metadata":{},"sourceType":"module"}